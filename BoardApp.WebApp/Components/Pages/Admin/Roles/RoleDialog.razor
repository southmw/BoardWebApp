@using BoardApp.WebApp.Models
@using BoardApp.WebApp.Services
@using MudBlazor
@inject IRoleService RoleService
@inject ISnackbar Snackbar

<MudDialog>
    <DialogContent>
        <EditForm Model="@role" OnValidSubmit="HandleSubmit">
            <DataAnnotationsValidator />
            <MudStack Spacing="3">
                <MudTextField @bind-Value="role.Name"
                              For="@(() => role.Name)"
                              Label="역할 이름"
                              Variant="Variant.Outlined"
                              Required="true"
                              Disabled="@(IsEditMode && IsSystemRole)"
                              HelperText="@(IsSystemRole ? "시스템 역할의 이름은 변경할 수 없습니다" : "역할을 식별하는 고유한 이름입니다")" />

                <MudTextField @bind-Value="role.Description"
                              For="@(() => role.Description)"
                              Label="설명"
                              Variant="Variant.Outlined"
                              Lines="3"
                              HelperText="역할에 대한 설명을 입력하세요 (선택사항)" />

                @if (IsEditMode)
                {
                    <MudText Typo="Typo.caption" Color="Color.Secondary">
                        생성일: @role.CreatedAt.ToString("yyyy-MM-dd HH:mm")
                    </MudText>
                }
            </MudStack>
        </EditForm>
    </DialogContent>
    <DialogActions>
        <MudButton OnClick="Cancel">취소</MudButton>
        <MudButton Color="Color.Primary" Variant="Variant.Filled" OnClick="HandleSubmit">
            @(IsEditMode ? "수정" : "추가")
        </MudButton>
    </DialogActions>
</MudDialog>

@code {
    [CascadingParameter]
    private IDialogReference? MudDialog { get; set; }

    [Parameter]
    public ApplicationRole Role { get; set; } = new();

    [Parameter]
    public bool IsEditMode { get; set; }

    private ApplicationRole role = new();
    private bool IsSystemRole => role.Name == "Admin" || role.Name == "User";

    protected override void OnParametersSet()
    {
        if (IsEditMode)
        {
            // 수정 모드: 기존 데이터 복사
            role = new ApplicationRole
            {
                Id = Role.Id,
                Name = Role.Name,
                NormalizedName = Role.NormalizedName,
                Description = Role.Description,
                CreatedAt = Role.CreatedAt,
                ConcurrencyStamp = Role.ConcurrencyStamp
            };
        }
        else
        {
            // 생성 모드: 새 인스턴스
            role = new ApplicationRole
            {
                CreatedAt = DateTime.Now
            };
        }
    }

    private async Task HandleSubmit()
    {
        if (string.IsNullOrWhiteSpace(role.Name))
        {
            Snackbar.Add("역할 이름을 입력해주세요.", Severity.Warning);
            return;
        }

        bool success;

        if (IsEditMode)
        {
            success = await RoleService.UpdateRoleAsync(role);
        }
        else
        {
            success = await RoleService.CreateRoleAsync(role);
        }

        if (success)
        {
            MudDialog?.Close(DialogResult.Ok(true));
        }
        else
        {
            Snackbar.Add($"역할 {(IsEditMode ? "수정" : "추가")}에 실패했습니다.", Severity.Error);
        }
    }

    private void Cancel()
    {
        MudDialog?.Close();
    }
}
